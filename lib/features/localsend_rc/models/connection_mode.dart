/// –†–µ–∂–∏–º—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ WebRTC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
enum ConnectionMode {
  /// –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç offer
  initiator,

  /// –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è - –∂–¥–µ—Ç offer –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç answer
  receiver,
}

/// –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å ConnectionMode
extension ConnectionModeExtension on ConnectionMode {
  /// –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  String get displayName {
    switch (this) {
      case ConnectionMode.initiator:
        return '–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ';
      case ConnectionMode.receiver:
        return '–ñ–¥–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
    }
  }

  /// –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞
  String get description {
    switch (this) {
      case ConnectionMode.initiator:
        return '–í–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É';
      case ConnectionMode.receiver:
        return '–í–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –≤—Ö–æ–¥—è—â–µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞';
    }
  }

  /// –ò–∫–æ–Ω–∫–∞ –¥–ª—è —Ä–µ–∂–∏–º–∞
  String get icon {
    switch (this) {
      case ConnectionMode.initiator:
        return 'üöÄ';
      case ConnectionMode.receiver:
        return 'üì°';
    }
  }
}
