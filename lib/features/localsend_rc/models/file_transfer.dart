import 'dart:convert';

import 'package:freezed_annotation/freezed_annotation.dart';
import 'dart:typed_data';

part 'file_transfer.freezed.dart';
part 'file_transfer.g.dart';

class Uint8ListBase64Converter extends JsonConverter<Uint8List, String> {
  const Uint8ListBase64Converter();

  @override
  Uint8List fromJson(String json) => base64Decode(json);

  @override
  String toJson(Uint8List object) => base64Encode(object);
}

/// –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
enum FileTransferState {
  /// –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏/–ø—Ä–∏—ë–º–∞
  pending,

  /// –í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–µ—Ä–µ–¥–∞—á–∏
  transferring,

  /// –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
  completed,

  /// –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  cancelled,

  /// –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏
  failed,

  /// –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
  paused,
}

/// –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
enum FileTransferDirection {
  /// –ò—Å—Ö–æ–¥—è—â–∏–π —Ñ–∞–π–ª (–æ—Ç–ø—Ä–∞–≤–∫–∞)
  outgoing,

  /// –í—Ö–æ–¥—è—â–∏–π —Ñ–∞–π–ª (–ø–æ–ª—É—á–µ–Ω–∏–µ)
  incoming,
}

/// –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–µ—Ä–µ–¥–∞—á–∏
extension FileTransferStateExtension on FileTransferState {
  /// –ê–∫—Ç–∏–≤–Ω–∞ –ª–∏ –ø–µ—Ä–µ–¥–∞—á–∞
  bool get isActive {
    switch (this) {
      case FileTransferState.transferring:
        return true;
      case FileTransferState.pending:
      case FileTransferState.completed:
      case FileTransferState.cancelled:
      case FileTransferState.failed:
      case FileTransferState.paused:
        return false;
    }
  }

  /// –ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  bool get canCancel {
    switch (this) {
      case FileTransferState.pending:
      case FileTransferState.transferring:
      case FileTransferState.paused:
        return true;
      case FileTransferState.completed:
      case FileTransferState.cancelled:
      case FileTransferState.failed:
        return false;
    }
  }

  /// –ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  bool get canPause {
    switch (this) {
      case FileTransferState.transferring:
        return true;
      case FileTransferState.pending:
      case FileTransferState.completed:
      case FileTransferState.cancelled:
      case FileTransferState.failed:
      case FileTransferState.paused:
        return false;
    }
  }

  /// –ú–æ–∂–Ω–æ –ª–∏ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  bool get canResume {
    return this == FileTransferState.paused;
  }

  /// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  String get displayName {
    switch (this) {
      case FileTransferState.pending:
        return '–û–∂–∏–¥–∞–Ω–∏–µ';
      case FileTransferState.transferring:
        return '–ü–µ—Ä–µ–¥–∞—á–∞';
      case FileTransferState.completed:
        return '–ó–∞–≤–µ—Ä—à–µ–Ω–æ';
      case FileTransferState.cancelled:
        return '–û—Ç–º–µ–Ω–µ–Ω–æ';
      case FileTransferState.failed:
        return '–û—à–∏–±–∫–∞';
      case FileTransferState.paused:
        return '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ';
    }
  }

  /// –ò–∫–æ–Ω–∫–∞ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  String get icon {
    switch (this) {
      case FileTransferState.pending:
        return '‚è≥';
      case FileTransferState.transferring:
        return 'üîÑ';
      case FileTransferState.completed:
        return '‚úÖ';
      case FileTransferState.cancelled:
        return '‚ùå';
      case FileTransferState.failed:
        return 'üî¥';
      case FileTransferState.paused:
        return '‚è∏Ô∏è';
    }
  }
}

/// –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
@freezed
abstract class FileMetadata with _$FileMetadata {
  const factory FileMetadata({
    /// –ò–º—è —Ñ–∞–π–ª–∞
    required String name,

    /// –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
    required int size,

    /// MIME —Ç–∏–ø —Ñ–∞–π–ª–∞
    String? mimeType,

    /// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    String? extension,

    /// MD5 —Ö–µ—à —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
    String? md5Hash,

    /// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    Map<String, dynamic>? extra,
  }) = _FileMetadata;

  factory FileMetadata.fromJson(Map<String, dynamic> json) =>
      _$FileMetadataFromJson(json);
}

/// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–¥–∞—á–µ —Ñ–∞–π–ª–∞
@freezed
abstract class FileTransfer with _$FileTransfer {
  const factory FileTransfer({
    /// –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–µ—Ä–µ–¥–∞—á–∏
    required String id,

    /// –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞
    required FileMetadata metadata,

    /// –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏
    required FileTransferDirection direction,

    /// –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏
    required FileTransferState state,

    /// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –±–∞–π—Ç
    @Default(0) int transferredBytes,

    /// –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –±–∞–π—Ç–∞—Ö/—Å–µ–∫
    @Default(0) double speed,

    /// –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–¥–∞—á–∏
    DateTime? startTime,

    /// –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏
    DateTime? endTime,

    /// –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    String? error,

    /// –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É
    String? localPath,

    /// –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞ –≤ –±–∞–π—Ç–∞—Ö
    @Default(64 * 1024) int chunkSize, // 64KB –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    /// –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–Ω–∫–æ–≤
    int? totalChunks,

    /// –¢–µ–∫—É—â–∏–π —á–∞–Ω–∫
    @Default(0) int currentChunk,

    /// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    Map<String, dynamic>? extra,
  }) = _FileTransfer;

  factory FileTransfer.fromJson(Map<String, dynamic> json) =>
      _$FileTransferFromJson(json);
}

/// –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è FileTransfer
extension FileTransferExtension on FileTransfer {
  /// –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (0.0 - 1.0)
  double get progress {
    if (metadata.size == 0) return 0.0;
    return transferredBytes / metadata.size;
  }

  /// –ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (0 - 100)
  int get progressPercent => (progress * 100).round();

  /// –û—Å—Ç–∞–≤—à–µ–µ—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç
  int get remainingBytes => metadata.size - transferredBytes;

  /// –û—Ü–µ–Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  Duration? get estimatedTimeRemaining {
    if (speed == 0 || remainingBytes == 0) return null;
    final seconds = remainingBytes / speed;
    return Duration(seconds: seconds.round());
  }

  /// –ü—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥–∞—á–∏
  Duration? get elapsedTime {
    if (startTime == null) return null;
    final endTimeOrNow = endTime ?? DateTime.now();
    return endTimeOrNow.difference(startTime!);
  }

  /// –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –ø–µ—Ä–µ–¥–∞—á–∞
  bool get isCompleted => state == FileTransferState.completed;

  /// –ï—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∞
  bool get hasError => state == FileTransferState.failed;

  /// –ê–∫—Ç–∏–≤–Ω–∞ –ª–∏ –ø–µ—Ä–µ–¥–∞—á–∞
  bool get isActive => state.isActive;

  /// –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
  String get formattedSize => _formatBytes(metadata.size);

  /// –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –±–∞–π—Ç
  String get formattedTransferredBytes => _formatBytes(transferredBytes);

  /// –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
  String get formattedSpeed => '${_formatBytes(speed.round())}/—Å';

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–π—Ç –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
  String _formatBytes(int bytes) {
    if (bytes < 1024) return '$bytes –ë';
    if (bytes < 1024 * 1024) return '${(bytes / 1024).toStringAsFixed(1)} –ö–ë';
    if (bytes < 1024 * 1024 * 1024) {
      return '${(bytes / (1024 * 1024)).toStringAsFixed(1)} –ú–ë';
    }
    return '${(bytes / (1024 * 1024 * 1024)).toStringAsFixed(1)} –ì–ë';
  }

  /// –°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
  FileTransfer copyWithProgress(int newTransferredBytes, {double? newSpeed}) {
    return copyWith(
      transferredBytes: newTransferredBytes,
      speed: newSpeed ?? speed,
      state: newTransferredBytes >= metadata.size
          ? FileTransferState.completed
          : FileTransferState.transferring,
      endTime: newTransferredBytes >= metadata.size ? DateTime.now() : endTime,
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é —Å –Ω–æ–≤—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  FileTransfer copyWithState(
    FileTransferState newState, {
    String? errorMessage,
  }) {
    return copyWith(
      state: newState,
      error:
          errorMessage ?? (newState == FileTransferState.failed ? error : null),
      endTime:
          newState == FileTransferState.completed ||
              newState == FileTransferState.cancelled ||
              newState == FileTransferState.failed
          ? DateTime.now()
          : null,
    );
  }

  /// –ù–∞—á–∞—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  FileTransfer start() {
    return copyWith(
      state: FileTransferState.transferring,
      startTime: DateTime.now(),
      error: null,
    );
  }

  /// –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  FileTransfer pause() {
    return copyWithState(FileTransferState.paused);
  }

  /// –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  FileTransfer resume() {
    return copyWith(state: FileTransferState.transferring);
  }

  /// –û—Ç–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–¥–∞—á—É
  FileTransfer cancel() {
    return copyWithState(FileTransferState.cancelled);
  }

  /// –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å –æ—à–∏–±–∫–æ–π
  FileTransfer fail(String errorMessage) {
    return copyWithState(FileTransferState.failed, errorMessage: errorMessage);
  }
}

/// –ß–∞–Ω–∫ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
@freezed
abstract class FileChunk with _$FileChunk {
  const factory FileChunk({
    /// ID –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
    required String transferId,

    /// –ù–æ–º–µ—Ä —á–∞–Ω–∫–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 0)
    required int chunkIndex,

    /// –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞–Ω–∫–æ–≤
    required int totalChunks,

    /// –î–∞–Ω–Ω—ã–µ —á–∞–Ω–∫–∞
    @Uint8ListBase64Converter() required Uint8List data,

    /// –†–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞
    required int size,

    /// –ü–æ–∑–∏—Ü–∏—è –≤ —Ñ–∞–π–ª–µ
    required int offset,

    /// –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º —á–∞–Ω–∫–æ–º
    required bool isLast,

    /// MD5 —Ö–µ—à —á–∞–Ω–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
    String? md5Hash,
  }) = _FileChunk;

  factory FileChunk.fromJson(Map<String, dynamic> json) =>
      _$FileChunkFromJson(json);
}

/// –°–æ–æ–±—â–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–µ–π —Ñ–∞–π–ª–∞
@freezed
abstract class FileTransferMessage with _$FileTransferMessage {
  const factory FileTransferMessage({
    /// –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
    required FileTransferMessageType type,

    /// ID –ø–µ—Ä–µ–¥–∞—á–∏
    required String transferId,

    /// –î–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    Map<String, dynamic>? data,

    /// –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
    required DateTime timestamp,
  }) = _FileTransferMessage;

  factory FileTransferMessage.fromJson(Map<String, dynamic> json) =>
      _$FileTransferMessageFromJson(json);

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–¥–∞—á–∏
  factory FileTransferMessage.request({
    required String transferId,
    required FileMetadata metadata,
  }) {
    return FileTransferMessage(
      type: FileTransferMessageType.request,
      transferId: transferId,
      timestamp: DateTime.now(),
      data: {'metadata': metadata.toJson()},
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∏—è –ø–µ—Ä–µ–¥–∞—á–∏
  factory FileTransferMessage.accept({required String transferId}) {
    return FileTransferMessage(
      type: FileTransferMessageType.accept,
      transferId: transferId,
      timestamp: DateTime.now(),
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–∏
  factory FileTransferMessage.reject({
    required String transferId,
    String? reason,
  }) {
    return FileTransferMessage(
      type: FileTransferMessageType.reject,
      transferId: transferId,
      timestamp: DateTime.now(),
      data: reason != null ? {'reason': reason} : null,
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–∞–Ω–∫–æ–º
  factory FileTransferMessage.chunk({
    required String transferId,
    required FileChunk chunk,
  }) {
    return FileTransferMessage(
      type: FileTransferMessageType.chunk,
      transferId: transferId,
      timestamp: DateTime.now(),
      data: chunk.toJson(),
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–∞–Ω–∫–∞
  factory FileTransferMessage.ack({
    required String transferId,
    required int chunkIndex,
  }) {
    return FileTransferMessage(
      type: FileTransferMessageType.ack,
      transferId: transferId,
      timestamp: DateTime.now(),
      data: {'chunkIndex': chunkIndex},
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –ø–µ—Ä–µ–¥–∞—á–∏
  factory FileTransferMessage.cancel({
    required String transferId,
    String? reason,
  }) {
    return FileTransferMessage(
      type: FileTransferMessageType.cancel,
      transferId: transferId,
      timestamp: DateTime.now(),
      data: reason != null ? {'reason': reason} : null,
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  factory FileTransferMessage.error({
    required String transferId,
    required String error,
  }) {
    return FileTransferMessage(
      type: FileTransferMessageType.error,
      transferId: transferId,
      timestamp: DateTime.now(),
      data: {'error': error},
    );
  }

  /// –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
  factory FileTransferMessage.complete({required String transferId}) {
    return FileTransferMessage(
      type: FileTransferMessageType.complete,
      transferId: transferId,
      timestamp: DateTime.now(),
    );
  }
}

/// –¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞—á–µ–π —Ñ–∞–π–ª–æ–≤
enum FileTransferMessageType {
  /// –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É —Ñ–∞–π–ª–∞
  request,

  /// –ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–ø—Ä–æ—Å–∞
  accept,

  /// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
  reject,

  /// –ß–∞–Ω–∫ –¥–∞–Ω–Ω—ã—Ö
  chunk,

  /// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —á–∞–Ω–∫–∞
  ack,

  /// –û—Ç–º–µ–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∏
  cancel,

  /// –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏
  error,

  /// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏
  complete,

  /// –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏
  pause,

  /// –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞—á–∏
  resume,
}
