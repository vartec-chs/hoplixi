import 'package:freezed_annotation/freezed_annotation.dart';
import 'dart:io';
import 'package:uuid/uuid.dart';

part 'device_info.freezed.dart';
part 'device_info.g.dart';

/// –¢–∏–ø—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è LocalSend
enum DeviceType { mobile, desktop, tablet, unknown }

/// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –≤ —Å–µ—Ç–∏ LocalSend
@freezed
abstract class DeviceInfo with _$DeviceInfo {
  const factory DeviceInfo({
    /// –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    required String id,

    /// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    required String name,

    /// –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    required DeviceType type,

    /// IP –∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    required String ipAddress,

    /// –ü–æ—Ä—Ç –¥–ª—è HTTP signaling —Å–µ—Ä–≤–µ—Ä–∞
    required int port,

    /// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
    Map<String, String>? attributes,

    /// –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
    DateTime? lastSeen,

    /// –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º
    @Default(DeviceConnectionStatus.discovered) DeviceConnectionStatus status,
  }) = _DeviceInfo;

  factory DeviceInfo.fromJson(Map<String, dynamic> json) =>
      _$DeviceInfoFromJson(json);

  /// –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  factory DeviceInfo.currentDevice({String? customName, int? customPort}) {
    final uuid = const Uuid();
    final deviceName = customName ?? _getDeviceName();
    final deviceType = _getDeviceType();

    return DeviceInfo(
      id: uuid.v4(),
      name: deviceName,
      type: deviceType,
      ipAddress: '0.0.0.0', // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ IP
      port: customPort ?? 8080,
      attributes: {
        'platform': Platform.operatingSystem,
        'version': Platform.operatingSystemVersion,
      },
      lastSeen: DateTime.now(),
      status: DeviceConnectionStatus.self,
    );
  }
}

/// –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º
enum DeviceConnectionStatus {
  /// –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, –Ω–æ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ
  discovered,

  /// –ò–¥–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  connecting,

  /// –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ
  connected,

  /// –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ
  disconnected,

  /// –¢–µ–∫—É—â–µ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
  self,
}

/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
DeviceType _getDeviceType() {
  if (Platform.isAndroid || Platform.isIOS) {
    return DeviceType.mobile;
  } else if (Platform.isWindows || Platform.isMacOS || Platform.isLinux) {
    return DeviceType.desktop;
  } else {
    return DeviceType.unknown;
  }
}

/// –ü–æ–ª—É—á–∞–µ—Ç –∏–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
String _getDeviceName() {
  final platform = Platform.operatingSystem;
  final hostname = Platform.localHostname;

  return '$hostname ($platform)';
}

/// –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å DeviceInfo
extension DeviceInfoExtension on DeviceInfo {
  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  bool get isAvailable =>
      status == DeviceConnectionStatus.discovered ||
      status == DeviceConnectionStatus.disconnected;

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
  bool get isConnected => status == DeviceConnectionStatus.connected;

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º
  bool get isSelf => status == DeviceConnectionStatus.self;

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  String get deviceIcon {
    switch (type) {
      case DeviceType.mobile:
        return 'üì±';
      case DeviceType.desktop:
        return 'üíª';
      case DeviceType.tablet:
        return 'üì±'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –∑–Ω–∞—á–æ–∫ —á—Ç–æ –∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ
      case DeviceType.unknown:
        return 'üì°';
    }
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  String get fullAddress => '$ipAddress:$port';
}
